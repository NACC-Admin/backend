{"version":3,"sources":["../../src/mailer/mailer-endpoint.js"],"names":["makeMailerEndpointHandler","mailerQuery","handle","httpRequest","method","postMailer","getMessages","statusCode","errorMessage","max","before","after","queryParams","result","headers","data","JSON","stringify","mailerInfo","body","parse","mailer","add","e","message","UniqueConstraintError","InvalidPropertyError","RequiredParameterError"],"mappings":";;;;;;;AAAA;;AAKE;;AACA;;;;AAEa,SAASA,yBAAT,CAAmC;AAACC,EAAAA;AAAD,CAAnC,EAAiD;AAC5D,SAAO,eAAeC,MAAf,CAAsBC,WAAtB,EAAkC;AACrC,YAAQA,WAAW,CAACC,MAApB;AACI,WAAK,MAAL;AACE,eAAOC,UAAU,CAACF,WAAD,CAAjB;;AAEF,WAAK,KAAL;AACE,eAAOG,WAAW,CAACH,WAAD,CAAlB;;AAEF;AACE,eAAO,wBAAc;AACnBI,UAAAA,UAAU,EAAE,GADO;AAEnBC,UAAAA,YAAY,EAAG,GAAEL,WAAW,CAACC,MAAO;AAFjB,SAAd,CAAP;AARN;AAaH,GAdD;;AAgBA,iBAAeE,WAAf,CAA4BH,WAA5B,EAAyC;AACvC,UAAM;AAAEM,MAAAA,GAAF;AAAOC,MAAAA,MAAP;AAAeC,MAAAA;AAAf,QAAyBR,WAAW,CAACS,WAAZ,IAA2B,EAA1D;AAEA,UAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACK,WAAZ,CAAwB;AAAEG,MAAAA,GAAF;AAAOC,MAAAA,MAAP;AAAeC,MAAAA;AAAf,KAAxB,CAArB;AAEA,WAAO;AACLG,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OADJ;AAILP,MAAAA,UAAU,EAAE,GAJP;AAKLQ,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,MAAf;AALD,KAAP;AAQD;;AAGD,iBAAeR,UAAf,CAA2BF,WAA3B,EAAwC;AACpC,QAAIe,UAAU,GAAGf,WAAW,CAACgB,IAA7B;;AACA,QAAI,CAACD,UAAL,EAAiB;AACf,aAAO,wBAAc;AACnBX,QAAAA,UAAU,EAAE,GADO;AAEnBC,QAAAA,YAAY,EAAE;AAFK,OAAd,CAAP;AAID;;AAED,QAAI,OAAOL,WAAW,CAACgB,IAAnB,KAA4B,QAAhC,EAA0C;AACxC,UAAI;AACFD,QAAAA,UAAU,GAAGF,IAAI,CAACI,KAAL,CAAWF,UAAX,CAAb;AACD,OAFD,CAEE,MAAM;AACN,eAAO,wBAAc;AACnBX,UAAAA,UAAU,EAAE,GADO;AAEnBC,UAAAA,YAAY,EAAE;AAFK,SAAd,CAAP;AAID;AACF;;AAED,QAAI;AAEF,YAAMa,MAAM,GAAG,qBAAWH,UAAX,CAAf;AACE,YAAML,MAAM,GAAG,MAAMZ,WAAW,CAACqB,GAAZ,CAAgBD,MAAhB,CAArB;AACA,aAAO;AACLP,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SADJ;AAILP,QAAAA,UAAU,EAAE,GAJP;AAKLQ,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,MAAf;AALD,OAAP;AAQH,KAZD,CAYE,OAAOU,CAAP,EAAU;AACV,aAAO,wBAAc;AACnBf,QAAAA,YAAY,EAAEe,CAAC,CAACC,OADG;AAEnBjB,QAAAA,UAAU,EACRgB,CAAC,YAAYE,6BAAb,GACI,GADJ,GAEIF,CAAC,YAAYG,4BAAb,IACAH,CAAC,YAAYI,8BADb,GAEE,GAFF,GAGE;AARW,OAAd,CAAP;AAUD;AACJ;AAIJ","sourcesContent":["import {\n    UniqueConstraintError,\n    InvalidPropertyError,\n    RequiredParameterError\n  } from '../helpers/errors';\n  import makeHttpError from '../helpers/http-error';\n  import makeMailer from './mailer';\n\nexport default function makeMailerEndpointHandler({mailerQuery}){\n    return async function handle(httpRequest){\n        switch (httpRequest.method) {\n            case 'POST':\n              return postMailer(httpRequest)\n\n            case 'GET':\n              return getMessages(httpRequest)\n\n            default:\n              return makeHttpError({\n                statusCode: 405,\n                errorMessage: `${httpRequest.method} method not allowed.`\n              })\n        }\n    }\n\n    async function getMessages (httpRequest) {\n      const { max, before, after } = httpRequest.queryParams || {}\n\n      const result = await mailerQuery.getMessages({ max, before, after })\n\n      return {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        statusCode: 200,\n        data: JSON.stringify(result)\n      }\n\n    }\n\n\n    async function postMailer (httpRequest) {\n        let mailerInfo = httpRequest.body\n        if (!mailerInfo) {\n          return makeHttpError({\n            statusCode: 400,\n            errorMessage: 'Bad request. No POST body.'\n          })\n        }\n    \n        if (typeof httpRequest.body === 'string') {\n          try {\n            mailerInfo = JSON.parse(mailerInfo)\n          } catch {\n            return makeHttpError({\n              statusCode: 400,\n              errorMessage: 'Bad request. POST body must be valid JSON.'\n            })\n          }\n        }\n    \n        try {\n\n          const mailer = makeMailer(mailerInfo)\n            const result = await mailerQuery.add(mailer)\n            return {\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              statusCode: 201,\n              data: JSON.stringify(result)\n            }\n          \n        } catch (e) {\n          return makeHttpError({\n            errorMessage: e.message,\n            statusCode:\n              e instanceof UniqueConstraintError\n                ? 409\n                : e instanceof InvalidPropertyError ||\n                  e instanceof RequiredParameterError\n                  ? 400\n                  : 500\n          })\n        }\n    }\n\n\n\n}"],"file":"mailer-endpoint.js"}