{"version":3,"sources":["../src/index.js"],"names":["cors","require","app","use","bodyParser","json","port","process","env","PORT","express","urlencoded","extended","authenticate","req","res","next","httpRequest","then","statusCode","console","log","message","catch","e","post","sendmailController","get","headers","data","set","status","send","end","all","staffController","activitiesController","delete","subscriberController","authController","listen"],"mappings":"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","sourcesContent":["import express from 'express'\nimport bodyParser from 'body-parser'\n\nimport handleAuthRequest from './auth'\nimport handleStaffRequest from './staff'\n\nimport handleActivitiesRequest from './activities'\n\nimport handleSubscriberRequest from './subscribers'\n\n// import handleMessagesRequest from './messages'\n// import handleTrendingReactRequest from './trending-react'\n// import handleTrendingReactCommentRequest from './trending-react-comment'\n// import handleFollowerRequest from './followers'\n\nimport handleSendmailRequest from './mailer'\n\n// import handleContactRequest from './contact'\n\nimport adaptRequest from './helpers/adapt-request'\n\nvar cors = require('cors')\nconst app = express();\napp.use(bodyParser.json());\n\nconst port = process.env.PORT || 9090;\n\n//Middleware\napp.use(express.urlencoded({ extended: true}));\napp.use(express.json());\n\napp.use(cors());\n\n\nfunction authenticate (req, res, next) {\n  const httpRequest = adaptRequest(req)\n  \n  handleAuthRequest(httpRequest)\n      .then(({ statusCode }) => {\n       \n        if(statusCode == 200){\n          next();\n        } \n        else {\n          console.log(\"Unauthorized access\")\n          res.json({message: \"Unauthorized access\"})\n        }\n\n    })\n    .catch(e => {console.log(e)})\n}\n\n\napp.post('/sendmail', sendmailController);\napp.get('/sendmail', sendmailController);\n\nfunction sendmailController (req, res) {\n  const httpRequest = adaptRequest(req)\n  handleSendmailRequest(httpRequest)\n      .then(({ headers, statusCode, data }) =>\n      res\n          .set(headers)\n          .status(statusCode) \n          .send(data)\n      )\n      .catch(e => res.status(500).end())\n}\n\n\napp.all('/staff', staffController);\napp.post('/staff/add', staffController);\napp.post('/staff/auth', staffController);\napp.post('/staff/reset', staffController);\napp.get('/staff/:id', staffController);\napp.get('/staff/?id=:id', staffController);\napp.get('/staff/find/?email=:email', staffController);\n\nfunction staffController (req, res) {\n    const httpRequest = adaptRequest(req)\n    handleStaffRequest(httpRequest)\n        .then(({ headers, statusCode, data }) =>\n        res\n            .set(headers)\n            .status(statusCode) \n            .send(data)\n        )\n        .catch(e => res.status(500).end())\n}\n\n\n\napp.get('/activities', activitiesController);\napp.post('/activities/add', activitiesController);\napp.delete('/activities/:id', activitiesController);\napp.get('/activities?month=:month', activitiesController);\napp.get('/activities?year=:year', activitiesController);\napp.get('/activities?dday=:dday&dmonth=:dmonth&dyear=:dyear', activitiesController);\n\n\nfunction activitiesController (req, res) {\n  \n  const httpRequest = adaptRequest(req)\n  handleActivitiesRequest(httpRequest)\n    .then(({ headers, statusCode, data }) =>\n      res\n        .set(headers)\n        .status(statusCode) \n        .send(data)\n    )\n    .catch(e => res.status(500).end())\n}\n\n\n\n\napp.all('/subscriber', authenticate, subscriberController);\napp.post('/subscriber/add', subscriberController);\napp.post('/subscriber/update', subscriberController);\napp.delete('/subscriber/:id', subscriberController);\napp.get('/subscriber/:id', subscriberController);\napp.get('/subscriber?id=:id', subscriberController);\n\nfunction subscriberController (req, res) {\n  \n  const httpRequest = adaptRequest(req)\n  handleSubscriberRequest(httpRequest)\n    .then(({ headers, statusCode, data }) =>\n      res\n        .set(headers)\n        .status(statusCode) \n        .send(data)\n    )\n    .catch(e => res.status(500).end())\n}\n\n\n\napp.all('/auth', authController);\napp.get('/auth/:id', authController);\napp.get('/auth/check_token', authController);\n\nfunction authController (req, res) {\n  const httpRequest = adaptRequest(req)\n  handleAuthRequest(httpRequest)\n      .then(({ headers, statusCode, data }) =>\n      res\n          .set(headers)\n          .status(statusCode) \n          .send(data)\n      )\n      .catch(e => res.status(500).end())\n}\n\n\napp.listen(port, () => console.log(`Listening on port 9090`+process.env.PORT || 9090));"],"file":"index.js"}