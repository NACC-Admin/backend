{"version":3,"sources":["../../src/auth/auth-endpoint.js"],"names":["makeAuthEndpointHandler","authQuery","handle","httpRequest","method","getAllHeaders","statusCode","errorMessage","email","queryParams","token","headers","authorization","undefined","result","checkToken","data","JSON","stringify","findByHeader"],"mappings":";;;;;;;AAAA;;AAKA;;AACA;;;;AAEe,SAASA,uBAAT,CAAiC;AAACC,EAAAA;AAAD,CAAjC,EAA6C;AAE1D,SAAO,eAAeC,MAAf,CAAsBC,WAAtB,EAAkC;AACvC,YAAQA,WAAW,CAACC,MAApB;AAEI,WAAK,KAAL;AACE,eAAOC,aAAa,CAACF,WAAD,CAApB;;AAEF,WAAK,MAAL;AACE,eAAOE,aAAa,CAACF,WAAD,CAApB;;AAEF;AACE,eAAO,wBAAc;AACnBG,UAAAA,UAAU,EAAE,GADO;AAEnBC,UAAAA,YAAY,EAAG,GAAEJ,WAAW,CAACC,MAAO;AAFjB,SAAd,CAAP;AATN;AAcD,GAfD;;AAkBA,iBAAeC,aAAf,CAA8BF,WAA9B,EAA2C;AAEzC,UAAM;AAAEK,MAAAA;AAAF,QAAYL,WAAW,CAACM,WAAZ,IAA2B,EAA7C;AACA,QAAIC,KAAK,GAAGP,WAAW,CAACQ,OAAZ,CAAoBC,aAAhC;;AAEA,QAAIJ,KAAK,KAAKK,SAAd,EAAyB;AACvB,YAAMC,MAAM,GAAG,MAAMb,SAAS,CAACc,UAAV,CAAqBL,KAArB,EAA4BF,KAA5B,CAArB;AAEA,aAAO;AACLG,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SADJ;AAILL,QAAAA,UAAU,EAAE,GAJP;AAKLU,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,MAAf;AALD,OAAP;AAQD,KAXD,MAYK;AACH,UAAIJ,KAAK,GAAGP,WAAW,CAACQ,OAAZ,CAAoBC,aAAhC;AACA,YAAME,MAAM,GAAG,MAAMb,SAAS,CAACkB,YAAV,CAAuBT,KAAvB,CAArB;AAEA,aAAO;AACLC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SADJ;AAILL,QAAAA,UAAU,EAAE,GAJP;AAKLU,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,MAAf;AALD,OAAP;AAQD;AAGF,GApDyD,CAsD1D;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAED","sourcesContent":["import {\n  UniqueConstraintError,\n  InvalidPropertyError,\n  RequiredParameterError\n} from '../helpers/errors';\nimport makeHttpError from '../helpers/http-error';\nimport makeAuth from './auth';\n\nexport default function makeAuthEndpointHandler({authQuery}){\n \n  return async function handle(httpRequest){\n    switch (httpRequest.method) {\n        \n        case 'GET':\n          return getAllHeaders(httpRequest)\n\n        case 'POST':\n          return getAllHeaders(httpRequest)\n\n        default:\n          return makeHttpError({\n            statusCode: 405,\n            errorMessage: `${httpRequest.method} method not allowed.`\n          })\n    }\n  }\n  \n\n  async function getAllHeaders (httpRequest) { \n\n    const { email } = httpRequest.queryParams || {}\n    var token = httpRequest.headers.authorization\n\n    if (email !== undefined ){\n      const result = await authQuery.checkToken(token, email)\n      \n      return {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        statusCode: 200,\n        data: JSON.stringify(result)\n      }\n\n    }\n    else {\n      var token = httpRequest.headers.authorization\n      const result = await authQuery.findByHeader(token)\n\n      return {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        statusCode: 200,\n        data: JSON.stringify(result)\n      }\n\n    }\n   \n      \n  }\n\n  // async function getHeader(httpRequest) {\n    \n  //   var token = httpRequest.headers.authorization\n  //   const result = await authQuery.findByHeader(token);\n\n  //   if(result == \"token expired\") {\n  //     return {\n  //       headers: {\n  //         'Content-Type': 'application/json'\n  //       },\n  //       data: {\n  //         status: 400,\n  //         message: \"Unauthorized access, token expired\"\n  //       }\n        \n  //     }\n  //   }\n  //   else if(result == \"error\") {\n  //     return {\n  //       headers: {\n  //         'Content-Type': 'application/json'\n  //       },\n  //       data: {\n  //         status: 405,\n  //         message: \"Unauthorized access, error\"\n  //       }\n  //     }\n  //   }\n  //   else {\n  //     return {\n  //       headers: {\n  //         'Content-Type': 'application/json'\n  //       },\n  //       data: {\n  //         status: 200,\n  //         message: \"found\"\n  //       }\n  //     }\n  //   }\n\n  // }\n\n}"],"file":"auth-endpoint.js"}